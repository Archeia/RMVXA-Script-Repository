#encoding:UTF-8
# ISS016 - Delay Script 1.1
#==============================================================================#
# ** ISS - Delay Script
#==============================================================================#
# ** Date Created  : 07/31/2011
# ** Date Modified : 08/10/2011
# ** Created By    : IceDragon
# ** For Game      : Code JIFZ
# ** ID            : 016
# ** Version       : 1.1
# ** Requires      : ISS000 - Core(1.9 or above)
#==============================================================================#
# // Interpreter calls
#==============================================================================#
# // delay_script(script, time)
# // EG.
# //   script = %Q(
# //     print "Hello World"
# //   )
# //   delay_script(script, 60)
# //
#==============================================================================#
($imported ||= {})["ISS-DelayScript"] = true
#==============================================================================#
# ** ISS
#==============================================================================#
module ISS
  install_script(16, :system)
end

#==============================================================================#
# ** ISS::DelayScript
#==============================================================================#
class ISS::DelayScript

  #--------------------------------------------------------------------------#
  # * Public Instance Variables
  #--------------------------------------------------------------------------#
  attr_accessor :executed

  #--------------------------------------------------------------------------#
  # * overwrite-method :initialize
  #--------------------------------------------------------------------------#
  def initialize(script, time)
    @time     = ISS::Timer.new(time, 0, false)
    @executed = false
    @script   = script
  end

  #--------------------------------------------------------------------------#
  # * new-method :from_self_data
  #--------------------------------------------------------------------------#
  def from_self_data
    return @script, @time.time_max
  end

  #--------------------------------------------------------------------------#
  # * new-method :new_from_self
  #--------------------------------------------------------------------------#
  def new_from_self ;
    self.class.new(*from_self_data)
  end

  #--------------------------------------------------------------------------#
  # * new-method :push_new_self
  #--------------------------------------------------------------------------#
  def push_new_self
    $game_map.delay_scripts << new_from_self
  end

  #--------------------------------------------------------------------------#
  # * new-method :update
  #--------------------------------------------------------------------------#
  def update
    @time.update
    if @time.finished? && !@executed
      eval(@script)
      @executed = true
    end
  end
end

#==============================================================================#
# ** Game_Map
#==============================================================================#
class Game_Map

  #--------------------------------------------------------------------------#
  # * Public Instance Variables
  #--------------------------------------------------------------------------#
  attr_accessor :delay_scripts

  #--------------------------------------------------------------------------#
  # * alias-method :setup
  #--------------------------------------------------------------------------#
  alias :iss016_dlysc_gmp_setup :setup unless $@
  def setup(*args, &block)
    iss016_dlysc_gmp_setup(*args, &block)
    create_delay_scripts ; @delay_scripts.clear
  end

  #--------------------------------------------------------------------------#
  # * new-method :create_delay_scripts
  #--------------------------------------------------------------------------#
  def create_delay_scripts ; @delay_scripts ||= [] ; end

  #--------------------------------------------------------------------------#
  # * alias-method :update
  #--------------------------------------------------------------------------#
  alias :iss016_dlysc_gmp_update :update unless $@
  def update(*args, &block)
    update_delay_scripts
    iss016_dlysc_gmp_update(*args, &block)
  end

  #--------------------------------------------------------------------------#
  # * new-method :update_delay_scripts
  #--------------------------------------------------------------------------#
  def update_delay_scripts
    create_delay_scripts
    @delay_scripts.each { |d| d.update }
    @delay_scripts.filter! { |d| !d.executed }
  end

end

#==============================================================================#
# ** Game_Interpreter
#==============================================================================#
class Game_Interpreter

  #--------------------------------------------------------------------------#
  # * new-method :delay_script
  #--------------------------------------------------------------------------#
  def delay_script(script, time)
    ds = ISS::DelayScript.new(script, time)
    $game_map.delay_scripts << ds ; return ds
  end

end

#=*==========================================================================*=#
# ** END OF FILE
#=*==========================================================================*=#
